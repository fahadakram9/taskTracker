{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_AddTask = _resolveComponent(\"AddTask\");\n  const _component_Tasks = _resolveComponent(\"Tasks\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_Header, {\n    onBtnClick: $options.toggleAddTask,\n    title: \"Task Tracker\",\n    showAddTask: $data.showAddTask\n  }, null, 8 /* PROPS */, [\"onBtnClick\", \"showAddTask\"]), $data.showAddTask ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_AddTask, {\n    onAddTask: $options.addTask\n  }, null, 8 /* PROPS */, [\"onAddTask\"])])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_Tasks, {\n    onToggleReminder: $options.toggleReminder,\n    onDeleteTask: $options.deleteTask,\n    tasks: $data.tasks\n  }, null, 8 /* PROPS */, [\"onToggleReminder\", \"onDeleteTask\", \"tasks\"])]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAW;;;;;;;;uBAAtBC,oBAOM,OAPNC,UAOM,GANJC,aAAqFC;IAA5EC,UAAS,EAAEC,sBAAa;IAAEC,KAAK,EAAC,cAAc;IAAEC,WAAW,EAAEC;0DAE3DA,iBAAW,kBAAtBR,oBAEM,oBADJE,aAA8BO;IAApBC,SAAQ,EAAEL;EAAO,+EAE7BH,aAAoFS;IAA5EC,gBAAe,EAAEP,uBAAc;IAAGQ,YAAW,EAAER,mBAAU;IAAGS,KAAK,EAAGN","names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_Header","onBtnClick","$options","title","showAddTask","$data","_component_AddTask","onAddTask","_component_Tasks","onToggleReminder","onDeleteTask","tasks"],"sourceRoot":"","sources":["/home/teresol/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @btn-click=\"toggleAddTask\" title=\"Task Tracker\" :showAddTask=\"showAddTask\" />\n    \n    <div v-if=\"showAddTask\">\n      <AddTask @add-task=\"addTask\"/>\n    </div>\n    <Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks= \"tasks\"/>\n  </div>\n</template>\n\n<script>\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nexport default {\n  name: 'App',\n  components: { \n    Header,\n    Tasks,\n    AddTask\n    \n  },\n  data(){\n    return{\n      tasks:[],  \n      showAddTask: false\n    }\n  },\n  methods:{\n\n    toggleAddTask(){\n      this.showAddTask=!this.showAddTask\n    },\n    async addTask(task){\n      const res=await fetch('api/tasks',{\n        method:'POST',\n        headers:{\n          'Content-type':'application/json',\n          \n        },\n        body: JSON.stringify(task),\n      })\n      const data= await res.json()\n      this.tasks=[...this.tasks, data]\n      \n    },\n    \n    async deleteTask(id){\n      \n      if(confirm('Are You Sure?')){\n        const res= await fetch(`api/tasks/${id}`,{\n          method: 'DELETE'\n        })\n\n        res.status==200 ? (this.tasks=this.tasks.filter((task)=>task.id !==id)):alert('Error deleting task')\n  }\n},\n  async toggleReminder(id){\n    const taskToggle= await this.fetchTask(id)\n    const updTask={...taskToToggle,re}\n\n    \n    this.tasks=this.tasks.map((task)=>task.id===id?{...task,reminder: !task.reminder}: task)\n  },\n  async fetchTasks(){\n    const res =await fetch('api/tasks')\n    const data= await res.json()\n    return data\n  },\n  async fetchTask(id){\n    const res =await fetch(`api/tasks${id}`)\n    const data= await res.json()\n    return data\n  }\n  },\n  async created(){\nthis.tasks = await this.fetchTasks()\n  },\n}\n</script>\n\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n.btn:focus {\n  outline: none;\n}\n.btn:active {\n  transform: scale(0.98);\n}\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}