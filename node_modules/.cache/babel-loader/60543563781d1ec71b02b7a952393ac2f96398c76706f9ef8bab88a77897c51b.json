{"ast":null,"code":"import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nexport default {\n  name: 'App',\n  components: {\n    Header,\n    Tasks,\n    AddTask\n  },\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false\n    };\n  },\n  methods: {\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n    async addTask(task) {\n      const res = await fetch('api/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(task)\n      });\n      const data = await res.json();\n      this.tasks = [...this.tasks, data];\n    },\n    async deleteTask(id) {\n      if (confirm('Are You Sure?')) {\n        const res = await fetch(`api/tasks/${id}`, {\n          method: 'DELETE'\n        });\n        res.status == 200 ? this.tasks = this.tasks.filter(task => task.id !== id) : alert('Error deleting task');\n      }\n    },\n    async toggleReminder(id) {\n      const taskToggle = await this.fetchTask(id);\n      const updTask = {\n        ...taskToToggle,\n        reminder: !taskt\n      };\n      this.tasks = this.tasks.map(task => task.id === id ? {\n        ...task,\n        reminder: !task.reminder\n      } : task);\n    },\n    async fetchTasks() {\n      const res = await fetch('api/tasks');\n      const data = await res.json();\n      return data;\n    },\n    async fetchTask(id) {\n      const res = await fetch(`api/tasks${id}`);\n      const data = await res.json();\n      return data;\n    }\n  },\n  async created() {\n    this.tasks = await this.fetchTasks();\n  }\n};","map":{"version":3,"mappings":"AAaA,OAAOA,MAAK,MAAO,qBAAoB;AACvC,OAAOC,KAAI,MAAO,oBAAmB;AACrC,OAAOC,OAAM,MAAO,sBAAqB;AAEzC,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVJ,MAAM;IACNC,KAAK;IACLC;EAEF,CAAC;EACDG,IAAI,GAAE;IACJ,OAAM;MACJC,KAAK,EAAC,EAAE;MACRC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAC;IAENC,aAAa,GAAE;MACb,IAAI,CAACF,WAAW,GAAC,CAAC,IAAI,CAACA,WAAU;IACnC,CAAC;IACD,MAAMG,OAAO,CAACC,IAAI,EAAC;MACjB,MAAMC,GAAG,GAAC,MAAMC,KAAK,CAAC,WAAW,EAAC;QAChCC,MAAM,EAAC,MAAM;QACbC,OAAO,EAAC;UACN,cAAc,EAAC;QAEjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;MAC3B,CAAC;MACD,MAAMN,IAAI,GAAE,MAAMO,GAAG,CAACO,IAAI,EAAC;MAC3B,IAAI,CAACb,KAAK,GAAC,CAAC,GAAG,IAAI,CAACA,KAAK,EAAED,IAAI;IAEjC,CAAC;IAED,MAAMe,UAAU,CAACC,EAAE,EAAC;MAElB,IAAGC,OAAO,CAAC,eAAe,CAAC,EAAC;QAC1B,MAAMV,GAAG,GAAE,MAAMC,KAAK,CAAE,aAAYQ,EAAG,EAAC,EAAC;UACvCP,MAAM,EAAE;QACV,CAAC;QAEDF,GAAG,CAACW,MAAM,IAAE,GAAE,GAAK,IAAI,CAACjB,KAAK,GAAC,IAAI,CAACA,KAAK,CAACkB,MAAM,CAAEb,IAAI,IAAGA,IAAI,CAACU,EAAC,KAAKA,EAAE,CAAC,GAAEI,KAAK,CAAC,qBAAqB;MACzG;IACF,CAAC;IACC,MAAMC,cAAc,CAACL,EAAE,EAAC;MACtB,MAAMM,UAAU,GAAE,MAAM,IAAI,CAACC,SAAS,CAACP,EAAE;MACzC,MAAMQ,OAAO,GAAC;QAAC,GAAGC,YAAY;QAACC,QAAQ,EAAC,CAACC;MAAK;MAG9C,IAAI,CAAC1B,KAAK,GAAC,IAAI,CAACA,KAAK,CAAC2B,GAAG,CAAEtB,IAAI,IAAGA,IAAI,CAACU,EAAE,KAAGA,EAAE,GAAC;QAAC,GAAGV,IAAI;QAACoB,QAAQ,EAAE,CAACpB,IAAI,CAACoB;MAAQ,CAAC,GAAEpB,IAAI;IACzF,CAAC;IACD,MAAMuB,UAAU,GAAE;MAChB,MAAMtB,GAAE,GAAG,MAAMC,KAAK,CAAC,WAAW;MAClC,MAAMR,IAAI,GAAE,MAAMO,GAAG,CAACO,IAAI,EAAC;MAC3B,OAAOd,IAAG;IACZ,CAAC;IACD,MAAMuB,SAAS,CAACP,EAAE,EAAC;MACjB,MAAMT,GAAE,GAAG,MAAMC,KAAK,CAAE,YAAWQ,EAAG,EAAC;MACvC,MAAMhB,IAAI,GAAE,MAAMO,GAAG,CAACO,IAAI,EAAC;MAC3B,OAAOd,IAAG;IACZ;EACA,CAAC;EACD,MAAM8B,OAAO,GAAE;IACjB,IAAI,CAAC7B,KAAI,GAAI,MAAM,IAAI,CAAC4B,UAAU,EAAC;EACjC;AACF","names":["Header","Tasks","AddTask","name","components","data","tasks","showAddTask","methods","toggleAddTask","addTask","task","res","fetch","method","headers","body","JSON","stringify","json","deleteTask","id","confirm","status","filter","alert","toggleReminder","taskToggle","fetchTask","updTask","taskToToggle","reminder","taskt","map","fetchTasks","created"],"sourceRoot":"","sources":["/home/teresol/hello-world/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <Header @btn-click=\"toggleAddTask\" title=\"Task Tracker\" :showAddTask=\"showAddTask\" />\n    \n    <div v-if=\"showAddTask\">\n      <AddTask @add-task=\"addTask\"/>\n    </div>\n    <Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks= \"tasks\"/>\n  </div>\n</template>\n\n<script>\n\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nexport default {\n  name: 'App',\n  components: { \n    Header,\n    Tasks,\n    AddTask\n    \n  },\n  data(){\n    return{\n      tasks:[],  \n      showAddTask: false\n    }\n  },\n  methods:{\n\n    toggleAddTask(){\n      this.showAddTask=!this.showAddTask\n    },\n    async addTask(task){\n      const res=await fetch('api/tasks',{\n        method:'POST',\n        headers:{\n          'Content-type':'application/json',\n          \n        },\n        body: JSON.stringify(task),\n      })\n      const data= await res.json()\n      this.tasks=[...this.tasks, data]\n      \n    },\n    \n    async deleteTask(id){\n      \n      if(confirm('Are You Sure?')){\n        const res= await fetch(`api/tasks/${id}`,{\n          method: 'DELETE'\n        })\n\n        res.status==200 ? (this.tasks=this.tasks.filter((task)=>task.id !==id)):alert('Error deleting task')\n  }\n},\n  async toggleReminder(id){\n    const taskToggle= await this.fetchTask(id)\n    const updTask={...taskToToggle,reminder:!taskt}\n\n    \n    this.tasks=this.tasks.map((task)=>task.id===id?{...task,reminder: !task.reminder}: task)\n  },\n  async fetchTasks(){\n    const res =await fetch('api/tasks')\n    const data= await res.json()\n    return data\n  },\n  async fetchTask(id){\n    const res =await fetch(`api/tasks${id}`)\n    const data= await res.json()\n    return data\n  }\n  },\n  async created(){\nthis.tasks = await this.fetchTasks()\n  },\n}\n</script>\n\n\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n.btn:focus {\n  outline: none;\n}\n.btn:active {\n  transform: scale(0.98);\n}\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}